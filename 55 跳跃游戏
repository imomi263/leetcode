#55 跳跃游戏
 bool canJump(vector<int>& nums) {
        
        if(nums.size()==1)return true;
        int t=nums.size();int flag=0;
        vector<int>::iterator it;int now;
        if(nums[0]==0)return false;
        while(1)
        {
            flag=0;
            it=find(nums.begin(),nums.end(),0);
            if(it==nums.end())
            {
                return true;
            }
            else
            {
                now=it-nums.begin();
                for(int i=now-1;i>=0;i--)
                {
                    if((nums[i]>now-i&&nums[i]>=0)||((it==nums.end()-1)&&nums[i]==now-i))
                    {
                        flag=1;
                        nums[now]=-1;
                        break;
                    }
                }
                if(!flag)
                {
                    return false;
                }
            }
        }
        return true;
    }
    我这里考虑了每一个0点所在位置然后只要这个点之前的x+nums[x]>0点的位置就行
    好像也可以维护一个end。
